# Generated by Django 5.2.7 on 2025-10-28 15:06

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
                ('date_updated', models.DateTimeField(auto_now=True, null=True)),
                ('date_deleted', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Active')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, verbose_name='Deleted')),
                ('name', models.CharField(default='My Wishlist', help_text='Name for this wishlist.', max_length=100, verbose_name='Wishlist Name')),
                ('is_public', models.BooleanField(default=False, help_text='Whether this wishlist is visible to other users.', verbose_name='Is Public')),
                ('user', models.OneToOneField(help_text='User who owns this wishlist.', on_delete=django.db.models.deletion.CASCADE, related_name='wishlist', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Wishlist',
                'verbose_name_plural': 'Wishlists',
                'db_table': 'wishlist',
            },
        ),
        migrations.CreateModel(
            name='WishListItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
                ('date_updated', models.DateTimeField(auto_now=True, null=True)),
                ('date_deleted', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Active')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, verbose_name='Deleted')),
                ('quantity', models.PositiveIntegerField(default=1, help_text='Quantity of the product')),
                ('total_price', models.DecimalField(decimal_places=2, default=0.0, help_text='Total price of the product', max_digits=10)),
                ('note', models.TextField(blank=True, help_text='Optional note or comment for this wishlist item.', max_length=500, null=True, verbose_name='Note')),
                ('priority', models.PositiveSmallIntegerField(choices=[(1, 'Low'), (2, 'Medium'), (3, 'High')], default=1, help_text='How important this item is to the user.', verbose_name='Priority')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.product')),
                ('variant', models.ForeignKey(blank=True, help_text='Selected variant for this cart item', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='products.productvariant')),
                ('wishlist', models.ForeignKey(help_text='Wishlist to which this item belongs.', on_delete=django.db.models.deletion.CASCADE, related_name='wishlist_items', to='wishlist.wishlist', verbose_name='Wishlist')),
            ],
            options={
                'verbose_name': 'Wishlist Item',
                'verbose_name_plural': 'Wishlist Items',
                'db_table': 'wishlist_item',
            },
        ),
        migrations.AddIndex(
            model_name='wishlist',
            index=models.Index(fields=['user'], name='wishlist_user_idx'),
        ),
        migrations.AddIndex(
            model_name='wishlist',
            index=models.Index(fields=['is_public', 'is_deleted'], name='wishlist_public_status_idx'),
        ),
        migrations.AddConstraint(
            model_name='wishlist',
            constraint=models.CheckConstraint(condition=models.Q(('is_deleted', False)), name='wishlist_not_deleted_check'),
        ),
        migrations.AddIndex(
            model_name='wishlistitem',
            index=models.Index(fields=['wishlist'], name='wl_item_wl_idx'),
        ),
        migrations.AddIndex(
            model_name='wishlistitem',
            index=models.Index(fields=['product'], name='wl_item_product_idx'),
        ),
        migrations.AddIndex(
            model_name='wishlistitem',
            index=models.Index(fields=['variant'], name='wl_item_variant_idx'),
        ),
        migrations.AddIndex(
            model_name='wishlistitem',
            index=models.Index(fields=['wishlist', 'is_deleted'], name='wl_item_status_idx'),
        ),
        migrations.AddIndex(
            model_name='wishlistitem',
            index=models.Index(fields=['priority', 'date_created'], name='wl_item_priority_date_idx'),
        ),
        migrations.AddConstraint(
            model_name='wishlistitem',
            constraint=models.UniqueConstraint(condition=models.Q(('is_deleted', False)), fields=('wishlist', 'product', 'variant'), name='unique_wishlist_product_variant'),
        ),
        migrations.AddConstraint(
            model_name='wishlistitem',
            constraint=models.CheckConstraint(condition=models.Q(('quantity__gte', 1)), name='wishlist_item_quantity_min_1'),
        ),
        migrations.AddConstraint(
            model_name='wishlistitem',
            constraint=models.CheckConstraint(condition=models.Q(('is_deleted', False)), name='wishlist_item_not_deleted_check'),
        ),
    ]
