# Generated by Django 5.2.7 on 2025-10-18 18:52

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
                ('date_updated', models.DateTimeField(auto_now=True, null=True)),
                ('date_deleted', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Active')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, verbose_name='Deleted')),
                ('name', models.CharField(help_text='Name of the category', max_length=100, unique=True, verbose_name='Category Name')),
                ('slug', models.SlugField(blank=True, help_text='Unique URL-friendly identifier', max_length=150, unique=True, verbose_name='URL Slug')),
                ('description', models.TextField(blank=True, help_text='Optional category description', verbose_name='Description')),
                ('parent', models.ForeignKey(blank=True, help_text='Parent category for nested subcategories', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='category.category', verbose_name='Parent Category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'db_table': 'categories',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['parent'], name='categories_parent__7983b2_idx'), models.Index(fields=['slug'], name='category_slug_idx')],
                'constraints': [models.UniqueConstraint(fields=('parent', 'name'), name='unique_category_name'), models.CheckConstraint(condition=models.Q(('pk', models.F('parent_id')), _negated=True), name='prevent_self_parent_reference_for_category')],
            },
        ),
    ]
