# Generated by Django 5.2.7 on 2025-10-17 18:19

import django.core.validators
import django.db.models.deletion
import django_countries.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='InternationalRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
                ('date_updated', models.DateTimeField(auto_now=True, null=True)),
                ('date_deleted', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Active')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, verbose_name='Deleted')),
                ('country', django_countries.fields.CountryField(max_length=2, unique=True)),
                ('surcharge', models.DecimalField(decimal_places=2, max_digits=6)),
            ],
            options={
                'verbose_name': 'International Rate',
                'verbose_name_plural': 'International Rates',
                'db_table': 'international_rates',
                'ordering': ['country'],
                'indexes': [models.Index(fields=['is_deleted'], name='internation_is_dele_4345b3_idx'), models.Index(fields=['is_active'], name='internation_is_acti_45c53f_idx'), models.Index(fields=['is_deleted', 'is_active'], name='internation_is_dele_5fc188_idx'), models.Index(fields=['date_created', 'is_deleted'], name='internation_date_cr_2e38d4_idx'), models.Index(fields=['is_deleted', 'date_deleted'], name='internation_is_dele_5df389_idx'), models.Index(fields=['date_created', 'is_active', 'is_deleted'], name='internation_date_cr_82a6ad_idx'), models.Index(fields=['surcharge'], name='internation_surchar_839440_idx'), models.Index(fields=['country', 'is_active', 'is_deleted'], name='internation_country_8aa60b_idx'), models.Index(fields=['surcharge', 'is_active', 'is_deleted'], name='internation_surchar_be1136_idx'), models.Index(fields=['country', 'is_active'], name='internation_country_5e5428_idx'), models.Index(fields=['surcharge', 'is_active'], name='internation_surchar_6537a4_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('surcharge__gte', 0)), name='non_negative_surcharge')],
            },
        ),
        migrations.CreateModel(
            name='ShippingClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
                ('date_updated', models.DateTimeField(auto_now=True, null=True)),
                ('date_deleted', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Active')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, verbose_name='Deleted')),
                ('name', models.CharField(help_text="Descriptive name for this shipping class (e.g., 'Standard Ground', 'Express 2-Day')", max_length=100, verbose_name='Shipping Class Name')),
                ('shipping_notes', models.TextField(blank=True, help_text='Internal notes, carrier instructions, or special handling requirements', max_length=4000, verbose_name='Shipping Notes')),
                ('base_cost', models.DecimalField(decimal_places=2, help_text='Base cost for shipping before any weight or distance adjustments', max_digits=8, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Base Shipping Cost')),
                ('shipping_type', models.CharField(choices=[('standard', 'Standard Shipping'), ('express', 'Express Shipping'), ('overnight', 'Overnight Shipping'), ('international', 'International Shipping'), ('free', 'Free Shipping'), ('pickup', 'Store Pickup'), ('heavy', 'Heavy Item Shipping'), ('refrigerated', 'Refrigerated Shipping')], default='standard', help_text='Type of shipping service offered', max_length=100, verbose_name='Shipping Type')),
                ('carrier_type', models.CharField(choices=[('ups', 'UPS'), ('fedex', 'FedEx'), ('dhl', 'DHL'), ('dpd', 'DPD'), ('inpost', 'InPost'), ('usps', 'USPS'), ('local_courier', 'Local Courier'), ('in_house', 'In-House Delivery'), ('third_party', 'Third Party Logistics')], default='in_house', help_text='Shipping carrier or service provider', max_length=50, verbose_name='Carrier Type')),
                ('estimated_days_min', models.IntegerField(help_text='Minimum number of business days for delivery', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(365)], verbose_name='Minimum Estimated Days')),
                ('estimated_days_max', models.PositiveIntegerField(help_text='Maximum number of business days for delivery', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(365)], verbose_name='Maximum Estimated Days')),
                ('cost_per_kg', models.DecimalField(decimal_places=2, default=0.0, help_text='Additional cost per kilogram over base weight', max_digits=6, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Cost per Kilogram')),
                ('free_shipping_threshold', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Order total required for free shipping (leave empty if not applicable)', max_digits=10, null=True, verbose_name='Free Shipping Threshold')),
                ('max_weight_kg', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum weight allowed for this shipping class in kilograms', max_digits=6, null=True, verbose_name='Maximum Weight (kg)')),
                ('max_dimensions', models.CharField(blank=True, help_text='Maximum package dimensions (L×W×H in cm) for this shipping class', max_length=50, null=True, verbose_name='Maximum Dimensions')),
                ('tracking_available', models.BooleanField(default=True, help_text='Whether tracking is available for this shipping method', verbose_name='Tracking Available')),
                ('signature_required', models.BooleanField(default=False, help_text='Whether signature is required upon delivery', verbose_name='Signature Required')),
                ('insurance_included', models.BooleanField(default=False, help_text='Whether basic insurance is included in the shipping cost', verbose_name='Insurance Included')),
                ('insurance_cost', models.DecimalField(decimal_places=2, default=0.0, help_text='Cost for additional insurance coverage', max_digits=6, verbose_name='Additional Insurance Cost')),
                ('domestic_only', models.BooleanField(default=True, help_text='Whether this shipping method is for domestic deliveries only', verbose_name='Domestic Only')),
                ('available_countries', django_countries.fields.CountryField(blank=True, help_text='Countries where this shipping method is available', max_length=746, multiple=True, verbose_name='Available Countries')),
                ('handling_time_days', models.PositiveIntegerField(default=1, help_text='Number of business days needed to process order before shipping', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(14)], verbose_name='Handling Time (Days)')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='shipping_class', to='orders.order')),
            ],
            options={
                'verbose_name': 'Shipping Class',
                'verbose_name_plural': 'Shipping Classes',
                'db_table': 'shipping_classes',
                'ordering': ['base_cost', 'estimated_days_min'],
            },
        ),
    ]
